@model IEnumerable<AI_Task_Planner.Models.TaskTimeLog>

@{
    ViewData["Title"] = "Time Logs Report";
}

<div class="card mb-4 shadow-sm">
    <div class="card-header bg-primary text-white">
        <h4 class="mb-0">Time Logs Report</h4>
    </div>
    <div class="card-body">
        <form asp-action="Report" method="get" class="mb-4">
            <div class="row g-3 align-items-center">
                <div class="col-auto">
                    <label for="fromDate" class="col-form-label">From Date</label>
                </div>
                <div class="col-auto">
                    <input type="date" id="fromDate" name="fromDate" class="form-control" value="@ViewBag.FromDate" />
                </div>
                <div class="col-auto">
                    <label for="toDate" class="col-form-label">To Date</label>
                </div>
                <div class="col-auto">
                    <input type="date" id="toDate" name="toDate" class="form-control" value="@ViewBag.ToDate" />
                </div>
                <div class="col-auto">
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-filter"></i> Filter
                    </button>
                </div>
            </div>
        </form>
        
        @if (Model.Any())
        {
            <div class="table-responsive">
                <table class="table table-hover" id="timeLogReport">
                    <thead>
                        <tr>
                            <th>User</th>
                            <th>Task</th>
                            <th>Date</th>
                            <th>Duration</th>
                            <th>Description</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@item.User.UserName</td>
                                <td>
                                    <a asp-controller="Tasks" asp-action="Details" asp-route-id="@item.TaskId">
                                        @item.Task.Title
                                    </a>
                                </td>
                                <td>@item.StartTime.ToString("MMM d, yyyy")</td>
                                <td>
                                    @if (!item.EndTime.HasValue)
                                    {
                                        <span class="badge bg-warning text-dark">In progress</span>
                                    }
                                    else if (item.DurationMinutes < 60)
                                    {
                                        <span>@item.DurationMinutes min</span>
                                    }
                                    else
                                    {
                                        <span>@(item.DurationMinutes / 60)h @(item.DurationMinutes % 60)m</span>
                                    }
                                </td>
                                <td>@item.Description</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            
            <div class="row mt-4">
                <div class="col-md-4">
                    <div class="card bg-light">
                        <div class="card-body">
                            <h5 class="card-title">Summary</h5>
                            @{
                                var totalMinutes = Model.Where(l => l.EndTime.HasValue).Sum(l => l.DurationMinutes);
                                var hours = totalMinutes / 60;
                                var minutes = totalMinutes % 60;
                                
                                var userSummary = Model
                                    .Where(l => l.EndTime.HasValue)
                                    .GroupBy(l => l.User.UserName)
                                    .Select(g => new { 
                                        User = g.Key, 
                                        Minutes = g.Sum(l => l.DurationMinutes) 
                                    })
                                    .OrderByDescending(x => x.Minutes)
                                    .ToList();
                            }
                            <p class="card-text">Total time logged: <strong>@hours hours and @minutes minutes</strong></p>
                            <hr />
                            <h6>Time by User</h6>
                            <ul class="list-group">
                                @foreach (var user in userSummary)
                                {
                                    <li class="list-group-item d-flex justify-content-between align-items-center">
                                        @user.User
                                        <span class="badge bg-primary rounded-pill">
                                            @(user.Minutes / 60)h @(user.Minutes % 60)m
                                        </span>
                                    </li>
                                }
                            </ul>
                        </div>
                    </div>
                </div>
                <div class="col-md-8">
                    <div class="card bg-light">
                        <div class="card-body">
                            <h5 class="card-title">Export Options</h5>
                            <div class="d-flex gap-2">
                                <button id="exportCsv" class="btn btn-outline-secondary">
                                    <i class="fas fa-file-csv"></i> Export to CSV
                                </button>
                                <button id="exportPdf" class="btn btn-outline-secondary">
                                    <i class="fas fa-file-pdf"></i> Export to PDF
                                </button>
                                <button onclick="window.print()" class="btn btn-outline-secondary">
                                    <i class="fas fa-print"></i> Print
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
        else
        {
            <div class="text-center py-5">
                <div class="mb-3">
                    <i class="fas fa-chart-bar fa-4x text-muted"></i>
                </div>
                <h4>No time logs found for this period</h4>
                <p class="text-muted">Try adjusting your date range or add some time logs first</p>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // CSV Export
            $("#exportCsv").click(function() {
                let csv = 'User,Task,Date,Duration,Description\n';
                
                $('#timeLogReport tbody tr').each(function() {
                    const columns = $(this).children('td').map(function() {
                        return $(this).text().trim();
                    }).get();
                    
                    csv += columns.join(',') + "\n";
                });
                
                const blob = new Blob([csv], { type: 'text/csv;charset=utf-8;' });
                const link = document.createElement('a');
                const url = URL.createObjectURL(blob);
                
                link.href = url;
                link.setAttribute('download', 'time_log_report.csv');
                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);
            });
        });
    </script>
}
